name: Deploy main
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  workflow_run:
    workflows:
      - Run Checks
    types:
      - completed
    branches:
      - main

jobs:
  on-checks-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'Not deploying since checks failed.'

  deploy-staging:
    name: Deploy to staging environment
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }} > domain.txt

      - name: Apply staging domain.txt
        run: vercel alias set `cat domain.txt` staging.hackuci.com --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    name: Deploy to production environment
    needs: deploy-staging
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Deploy to Vercel
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
